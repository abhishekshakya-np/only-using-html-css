*{
    box-sizing: border-box;
}

.header {
    /* border: 2px solid red; */
    margin: auto; 
    width: 1200px;
}

img {
    margin: auto;
    display: block;
    width: 94px;
}


h3 {
    text-align: center;
    font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
    margin: 0px;
}

.box {
    border: 4px solid black;
    background-color: grey;
    margin: 4px 0px;
    padding: 23px;
    width: 33%;
    box-sizing: border-box;
    display: inline-block;
}

/* CSS Position: static (default), relative, absolute, fixed, sticky */
.container{
    margin: auto;
    width: 1200px;
}

#box1{
    /* relative: Positions the element relative to its normal positon and will leave a gap at its normal position*/
    /* position: relative; */
    
    /* absolute: Positions the element relative to the positon of its first parent*/
    /* position: absolute; */

    /* top: 34px;
    left: 134px; */

    /* fixed: Positions the element relative to the browser window; */
    /* position: fixed;
    right: 4px;
    bottom: 2px */

    /* sticky: Positions the element relative to the users scroll position */
    position: sticky;
    top: 3px;
    background-color: #dae6d0;
}


.navbar {
    background-color: #f5bcbc;
    overflow: hidden;
}

.navbar ul { 
    overflow: auto; /* overflow works to clear the float */
}

 .navbar li { 
    float: left;   /*start to go to left with float  */  
    list-style: none; /* remove the bullet points */
    margin: 13px 20px;
}

.navbar li a {
    padding: 3px 3px;        
    text-decoration: none;
    color: white;
}

.content {
    border: 2px solid black;
    background-color: #fff;  
    padding: 34px; 
    margin: 10px auto;
    width: 666px;
}

/* remove underline in the link or text*/
a { 
    text-decoration: none; 
    color: #000;
}

a:hover {  
    text-decoration: underline;/* create underline when hovering over the button */
    color: #b6ffe9;
    background-color: greenyellow;
}

/* change the color of the link when it has been visited */
a:visited { 
    background-color: rgb(77, 114, 21);
}

/* change the color of the link when it is active */
a:active { 
    background-color: rgb(255, 0, 0);
}

.btn {
    background-color: #dae6d0;
    padding: 6px 20px;  
    border: none;
    cursor: pointer; /* make pointer change when hovering over the button */
    font-size: 12px;
    border-radius: 12px;
}

.btn:hover {
    background-color: #b6ffe9;
}


.boxes {
    width: 570px;
    height: 570px;
    border: 2px solid black;
}

#box-1   { 
    position: relative;
    top: 49px;
    z-index: -165;
    background-color: navy;        
}

#box-2   {  
    position: relative;
    top: 14px;
    /* z-index  will work only for position: relative, absolute, fixed or sticky; */
    z-index: -165;

    /* will hide the element and the space */
    /* display: none;  */
    /* will hide the element but will show its empty space */
    /* visibility:hidden;  */
    background-color: silver;        
    }

#box-3  {  
    background-color: floralwhite;
}
#box-4 { 
    background-color: olive;
    background: url('/Flexbox.png');
    background-size: contain;
    background-position: center; /* Center the background image horizontally and vertically */
}


.flexbox {
    height: 544px; 
    width: 100%;
    border: 2px solid rgb(255, 0, 0);
    display: flex; /* Initialize the container as a flex box */
    
    /* Flex properties for a flex container */

    /* flex-direction: row; (Default value of flex-direction is row) */
    /* flex-direction: column;
    flex-direction: row-reverse;
    flex-direction: column-reverse; */
    

    /* flex-wrap: wrap; (Default value of flex-direction is no-wrap) */
    /* flex-wrap: wrap-reverse; */

    /* This is a shorthand for flex-direction: and flex-wrap: ;; */
    /* flex-flow: row-reverse wrap; */ 

    /* justify-content will justify the content in horizontal direction */
    /* justify-content: center; */
    /* justify-content: space-between; */
    /* justify-content: space-evenly; */
    /* justify-content: space-around; */

    /* justify-content will justify the content in vertical direction */
    /* align-items: center; */
    /* align-items: flex-end; */
    /* align-items: flex-start; */
    /* align-items: stretch; */ 
}
.item{
    width: 200px;
    height: 200px;
    background-color: tomato;
    border: 2px solid green;
    margin: 10px;
    padding: 3px;
}

#item-1 {
    /* Flex properties for a flex item */
    /* Higher the order, later it shows up in the container */
    /* order: 2; */
    background-color: rgb(255, 0, 0);
    /* flex-grow: 2;
    flex-shrink: 2; */

}
#item-2 {
    /* flex-grow: 3;
    flex-shrink: 3 ; */
    flex-basis: 160px;
    /* when flex-direction is set to row flex-basis: will control width */
    /* when flex-direction is set to column flex-basis: will control height */
}
#item-3 {
    /* flex: 2 2 230px; */
    align-self: flex-start;
    align-self: flex-end;
    align-self: center;

    }
